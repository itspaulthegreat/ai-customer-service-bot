async function setupOrderDetails(orderId, productId) {
    try {
        // Fetch order item details
        const result = await getOrderItemDetails(userId, orderId, productId);
        if (!result.success || !result.metric_value.length) {
            console.error('Failed to fetch order item details:', result.error);
            MessageHandler.showMessage({
                message: "Failed to load order details. Please try again.",
                type: 'error'
            });
            $w('#multiStateBox').changeState('ordersState');
            return;
        }

        const item = result.metric_value[0];
        $w('#orderIdText').text = item.orderId;
        $w('#orderDetailsProductNameText').text = item.name;
        $w('#orderDetailsBrandNameText').text = item.brandName;
        $w('#orderDetailsPriceText').text = `â‚¹${item.price.toString()}`;
        $w('#orderDetailsProductSize').text = item.size;
        $w('#orderDetailsProductQuantity').text = item.quantity.toString();
        $w('#orderDetailsProductImage').src = item.productImage;
        $w('#orderDetailsShipmentStatusText').text = item.shipmentStatus;

        // Populate shipping address fields from shippingAddress data
        if (item.shippingAddress) {
            const address = item.shippingAddress;
            
            // Handle customer name - use name if available, otherwise use defaultName
            const customerName = address.name || address.defaultName || '';
            $w('#orderDetailsCustomerName').text = customerName;
            
            // Populate address fields
            $w('#orderDetailsFullAddress').text = address.fullAddress || '';
            $w('#orderDetailsStreet').text = address.streetName || '';
            $w('#orderDetailsApartment').text = address.apartmentHouse || '';
            $w('#orderDetailsLandMark').text = address.landmark || '';
            $w('#orderDetailsStateName').text = address.state || '';
            $w('#orderDetailsCityName').text = address.cityArea || '';
            $w('#orderDetailsPincode').text = address.pincode || '';
            
            console.log('[setupOrderDetails] Shipping address populated:', {
                customerName,
                fullAddress: address.fullAddress,
                streetName: address.streetName,
                state: address.state,
                cityArea: address.cityArea,
                pincode: address.pincode
            });
        } else {
            // Handle case where no shipping address is available
            console.log('[setupOrderDetails] No shipping address found for order:', orderId);
            $w('#orderDetailsCustomerName').text = '';
            $w('#orderDetailsFullAddress').text = '';
            $w('#orderDetailsStreet').text = '';
            $w('#orderDetailsApartment').text = '';
            $w('#orderDetailsLandMark').text = '';
            $w('#orderDetailsStateName').text = '';
            $w('#orderDetailsCityName').text = '';
            $w('#orderDetailsPincode').text = '';
        }

        // Initialize review-related UI
        $w('#orderDetailsRatingReviewCont').collapse();
        $w('#orderDetailsSubmittedReviewForm').collapse();
        $w('#orderDetailsReviewImageHtml').collapse();
        $w('#orderDetailsReviewImagePlaceholder').collapse();

        // Initialize HTML component for image upload
        $w('#orderDetailsReviewImageHtml').onMessage((event) => {
            if (event.data.type === "uploadReady") {
                $w('#orderDetailsReviewImageHtml').postMessage({
                    type: "initUpload",
                    hasImage: false,
                    label: "Add a photo review"
                });
            } else if (event.data.type === "imageSelected") {
                $w('#orderDetailsReviewImagePlaceholder').src = event.data.dataUrl;
                $w('#orderDetailsReviewImagePlaceholder').expand();
                $w('#orderDetailsReviewImageHtml').postMessage({
                    type: "initUpload",
                    hasImage: true,
                    label: "Change photo review"
                });
                if ($w('#orderDetailsRatingInput').value && $w('#orderDetailsReviewText').value) {
                    $w('#orderDetailsSubmitReviewButton').show();
                }
            } else if (event.data.type === "uploadError") {
                console.error("Image upload error:", event.data.error);
                MessageHandler.showMessage({
                    message: event.data.error || "Failed to upload image.",
                    type: 'error',
                    timeout: 3000
                });
            }
        });

        // Check if the order is delivered and eligible for review
        if (item.shipmentStatus !== 'Delivered') {
            console.log(`[setupOrderDetails] Order ${orderId} not delivered, hiding review form`);
            return;
        }

        const eligibility = await checkReviewEligibility(userId, productId);
        console.log(`[setupOrderDetails] Review eligibility for order ${orderId}, product ${productId}:`, eligibility);

        // Handle review eligibility
        await checkOrderDetailsReviewEligibility(item, eligibility, orderId, productId);

    } catch (error) {
        console.error('Error setting up order details:', error);
        MessageHandler.showMessage({
            message: "Failed to load order details. Please try again.",
            type: 'error'
        });
        $w('#multiStateBox').changeState('ordersState');
    }
}