function onItemReady($item, itemData, index, prefix) {
    try {
        $item(`#${prefix}ProductName`).text = itemData.name?.split("|")[0]?.trim() || '';

            const brandNameElement = $item(`#${prefix}BrandName`);
            if (brandNameElement?.type) {
                brandNameElement.text = itemData.brandName || CONSTANTS.BRAND_NAME;
            }
        // Handle discountedPrice
        const discountedPrice = itemData.discountedPrice;
        const discountedPriceText = $item(`#${prefix}DiscountedPrice`);
        if (discountedPriceText?.type && discountedPrice != null) {
            discountedPriceText.text = itemData.formattedDiscountedPrice || `₹${discountedPrice.toFixed(2)}`;
            discountedPriceText.show();
        } else {
            discountedPriceText?.hide();
        }

        // Handle formattedPrice (show only if discountedPrice < price)
        const price = itemData.price;
        const priceText = $item(`#${prefix}Price`);
        if (priceText?.type && price != null && discountedPrice != null && discountedPrice < price) {
            const formattedPrice = itemData.formattedPrice || `₹${price.toFixed(2)}`;
            // Trim to show only integer part (e.g., "800" instead of "800.00")
            priceText.text = formattedPrice.split('.')[0];
            priceText.show();
        } else {
            priceText?.hide();
        }

        const mediaItems = itemData.mediaItems || [];
        const image1 = $item(`#${prefix}Image${prefix === 'topChoices' ? '2' : '1'}`);
        const image2 = $item(`#${prefix}Image${prefix === 'topChoices' ? '1' : '2'}`);

        if (image1?.type && mediaItems[prefix === 'topChoices' ? 1 : 0]?.src) {
            image1.src = transformImageUrl(mediaItems[prefix === 'topChoices' ? 1 : 0].src);
            image1.show();
        } else {
            image1?.hide();
        }

        if (image2?.type && mediaItems[prefix === 'topChoices' ? 0 : 1]?.src) {
            image2.src = transformImageUrl(mediaItems[prefix === 'topChoices' ? 0 : 1].src);
            image2.show();
        } else {
            image2?.hide();
        }

        if (FORMFACTOR === "Desktop") {
            const allPossibleSizes = CONSTANTS.VARIANTS.AVAILABLESIZES || [];
            const availableSizes = new Set(
                prefix === 'topChoices' ?
                itemData.availableSizes?.filter(size => size?.inStock)?.map(size => size.value) || [] :
                itemData.productOptions?.Size?.choices?.filter(size => size?.inStock)?.map(size => size.value) || []
            );

            allPossibleSizes.forEach(size => {
                const sizeButton = $item(`#${prefix}Size${size}`);
                if (sizeButton?.type) {
                    try {
                        if (availableSizes.has(size)) {
                            sizeButton.enable();
                            sizeButton.customClassList.remove("diagonal-cut");
                        } else {
                            sizeButton.disable();
                            sizeButton.customClassList.add("diagonal-cut");
                        }
                    } catch (err) {
                        console.error(`Error manipulating ${prefix} size ${size}:`, err);
                    }
                }
            });
        }

        const banner = $item(`#${prefix}Banner`);
        const bannerText = $item(`#${prefix}BannerText`);
        const redirectButton = $item(`#${prefix}RedirectButton`);
        if (itemData.link) {
            redirectButton.link = itemData.link;
            redirectButton.target = "_blank";
        }
        if (banner?.type && bannerText?.type) {
            if (!itemData.inStock) {
                banner.show();

            } else {
                banner.hide();

            }
        }

        const wishlistButton1 = $item(`#${prefix}Wishlist1`);
        const wishlistButton2 = $item(`#${prefix}Wishlist2`);

        if (wishlistButton1?.type && wishlistButton2?.type) {
            const isInWishlist = wishlistProductIds.has(itemData.productId);

            if (isInWishlist) {
                wishlistButton1.hide();
                wishlistButton2.show();
            } else {
                wishlistButton1.show();
                wishlistButton2.hide();
            }

            wishlistButton1.onClick(() => createWishlistHandler($item, itemData, true, prefix)());
            wishlistButton2.onClick(() => createWishlistHandler($item, itemData, false, prefix)());
        }
    } catch (err) {
        console.error(`Error in onItemReady for ${prefix} item ${index}:`, err);
    }
}