async function displayReviews(productId) {
    try {
        // Fetch all reviews with valid ratings (regardless of status) for average and progress bars
        const { reviews, hasNext } = await getApprovedReviews(productId, currentFilter, CONSTANTS.REVIEWS.PAGE_SIZE);

        // Calculate average rating from all reviews with valid ratings
        const validReviews = reviews.filter(review =>
            review.rating >= CONSTANTS.REVIEWS.RATING_MIN &&
            review.rating <= CONSTANTS.REVIEWS.RATING_MAX
        );
        if (validReviews.length > 0) {
            const avgRating = validReviews.reduce((sum, review) => sum + review.rating, 0) / validReviews.length;
            $w("#averageRating").text = String(Math.round(avgRating * 2) / 2);

            const ratingCounts = { 1: 0, 2: 0, 3: 0, 4: 0, 5: 0 };
            validReviews.forEach(review => {
                const rating = Math.round(review.rating);
                if (rating >= 1 && rating <= 5) {
                    ratingCounts[rating]++;
                }
            });

            [1, 2, 3, 4, 5].forEach(rating => {
                const progressBar = $w(`#progressBar${rating}`);
                progressBar.targetValue = validReviews.length;
                progressBar.value = ratingCounts[rating];
            });
        } else {
            $w("#averageRating").text = "0";
            [1, 2, 3, 4, 5].forEach(rating => {
                const progressBar = $w(`#progressBar${rating}`);
                progressBar.targetValue = 1;
                progressBar.value = 0;
            });
        }

        // Count only APPROVED reviews with text or images for totalReviews
        const totalFilteredCount = await wixData.query(CONSTANTS.COLLECTIONS.REVIEWS)
            .eq("productId", productId)
            .eq("status", CONSTANTS.REVIEWS.STATUSES.APPROVED)
            .ne("reviewText", "")
            .or(wixData.query(CONSTANTS.COLLECTIONS.REVIEWS)
                .eq("productId", productId)
                .eq("status", CONSTANTS.REVIEWS.STATUSES.APPROVED)
                .ne("imageUrl", ""))
            .count();
        $w("#totalReviews").text = `${totalFilteredCount} Review${totalFilteredCount === 1 ? '' : 's'}`;

        // Filter only APPROVED reviews with text for reviewsRepeater
        const filteredReviews = reviews.filter(review =>
            review.status === CONSTANTS.REVIEWS.STATUSES.APPROVED && review.reviewText);

        $w("#reviewsRepeater").onItemReady(($item, itemData) => {
            $item("#reviewerName").text = itemData.customerName;
            $item("#reviewRating").rating = itemData.rating;
            $item("#reviewTextDisplay").text = itemData.reviewText || "";
            if (itemData.imageUrl) {
                $item("#reviewImage").src = itemData.imageUrl;
                $item("#reviewImage").show();
                $item("#reviewImage").onClick(() => {
                    wixWindow.openLightbox("imageGalleryLightbox", {
                        review: itemData,
                        showNavigation: false,
                        productId
                    });
                });
            } else {
                $item("#reviewImage").hide();
            }
            $item("#reviewDate").text = new Date(itemData._createdDate).toLocaleDateString("en-IN", {
                year: "numeric",
                month: "long",
                day: "numeric"
            });
        });

        $w("#reviewsRepeater").data = filteredReviews;
        $w("#loadMoreReviews")[totalFilteredCount > CONSTANTS.REVIEWS.PAGE_SIZE ? "show" : "hide"]();
    } catch (error) {
        console.error("Error displaying reviews:", error);
        MessageHandler.showMessage({ message: "Failed to load reviews.", type: "error" });
    }
}